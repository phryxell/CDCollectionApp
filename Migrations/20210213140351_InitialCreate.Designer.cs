// <auto-generated />
using System;
using CDCollectionApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CDCollectionApp.Migrations
{
    [DbContext(typeof(CDContext))]
    [Migration("20210213140351_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CDCollectionApp.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("CDCollectionApp.Models.CD", b =>
                {
                    b.Property<int>("CDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CDId");

                    b.HasIndex("ArtistId");

                    b.ToTable("CDs");
                });

            modelBuilder.Entity("CDCollectionApp.Models.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CDId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RentId");

                    b.HasIndex("CDId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("CDCollectionApp.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CDId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrackId");

                    b.HasIndex("CDId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("CDCollectionApp.Models.CD", b =>
                {
                    b.HasOne("CDCollectionApp.Models.Artist", "Artist")
                        .WithMany("CDs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("CDCollectionApp.Models.Rent", b =>
                {
                    b.HasOne("CDCollectionApp.Models.CD", "CD")
                        .WithMany("Rented")
                        .HasForeignKey("CDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CD");
                });

            modelBuilder.Entity("CDCollectionApp.Models.Track", b =>
                {
                    b.HasOne("CDCollectionApp.Models.CD", "CD")
                        .WithMany("Tracks")
                        .HasForeignKey("CDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CD");
                });

            modelBuilder.Entity("CDCollectionApp.Models.Artist", b =>
                {
                    b.Navigation("CDs");
                });

            modelBuilder.Entity("CDCollectionApp.Models.CD", b =>
                {
                    b.Navigation("Rented");

                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
